---
# tasks file for get_node_inventory_from_FM
- name: GVOS node inventory from FM
  uri:
    url: https://{{fm_ip}}/api/v1.3/nodes/flat
    method: GET
    user: "{{ fm_username }}"
    password: "{{ fm_password }}"
    force_basic_auth: yes
    validate_certs: False
    return_content: yes
    timeout: 30
    body_format: json
    status_code: 201,200, 204
  register: output
- set_fact:
    node_list: "{{ node_list|default([]) + [item.deviceIp] }}"
  with_items: "{{ output.json.nodes }}"
- debug:
    var: node_list
    
- set_fact:
    node_facts: "{{ node_facts|default({}) | combine ({item.deviceId : {'deviceIp': item.deviceIp, 'hostname': item.hostname, 'heathState': item.healthState, 'swVersion': item.swVersion} }) }}"
  with_items: "{{ output.json.nodes }}"
  
- debug:
    var: node_facts

- set_fact:
    cluster_list: "{{ cluster_list|default([])  + [item.clusterId] }}"
  with_items: "{{ output.json.nodes }}"
  
- set_fact:
    cluster_list: "{{ cluster_list|unique }}"
  
- debug:
    var: cluster_list
    
- name: GVOS node show diag
  uri:
    url: https://{{fm_ip}}/api/v1.3/system/diag?clusterId={{ item }}
    method: GET
    user: "{{ fm_username }}"
    password: "{{ fm_password }}"
    force_basic_auth: yes
    validate_certs: False
    return_content: yes
    timeout: 30
    body_format: json
    status_code: 201,200, 204
  with_items: "{{ cluster_list }}"
  register: output   
  ignore_errors: true

- debug:
   var: "{{ output }}"
